{"version":3,"names":[],"mappings":"","sources":["task.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nVue.component('tasks', {\n    template: '#tasks-template',\n\n    props: {\n        list: {},\n        newTask: {}\n        // sum: {\n        //     default: 1\n        // }\n    },\n\n    data: function data() {\n        return {\n            sum: 0\n        };\n    },\n\n    created: function created() {\n        // this.list = JSON.parse(this.list);\n        this.fetchTaskList();\n    },\n\n    methods: {\n        fetchTaskList: function fetchTaskList() {\n            $.getJSON('api/tasks', function (tasks) {\n                this.list = tasks;\n            }.bind(this));\n        },\n\n        deleteTask: function deleteTask(task) {\n            this.list.$remove(task);\n        }\n    }\n});\n\nnew Vue({\n    el: 'body',\n    data: {\n        list: [],\n        newTask: '',\n        selectType: '',\n        sum: 0,\n        types: [{ type_id: 1, type_name: 'Summary' }, { type_id: 2, type_name: 'Status' }, { type_id: 3, type_name: 'Effectiveness' }]\n    },\n\n    methods: {\n        saveTask: function saveTask() {\n            var saveTask = this.newTask.trim();\n            console.log(this.selectType + '_' + saveTask);\n        },\n\n        updateCount: function updateCount() {\n            this.sum += 1;\n        }\n    }\n});\n\n},{}]},{},[1]);\n"],"file":"task.js","sourceRoot":"/source/"}